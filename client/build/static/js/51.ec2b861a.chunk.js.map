{"version":3,"sources":["views/piechart/Piechart.js"],"names":["Piechart","downloadLink","setDownloadLink","useState","data","setData","colors","setColors","wedge","setWedge","xs","sm","className","htmlFor","type","id","value","onChange","event","target","onClick","fetch","api_base_url","then","res","json","result","message","document","getElementById","innerHTML","JSON","stringify","undefined","error","console","log","src","alt"],"mappings":"6KAAA,4CAsJeA,UAvIE,KAIf,MAAOC,EAAcC,GAAmBC,mBAAS,KAG1CC,EAAMC,GAAWF,mBAAS,UAC1BG,EAAQC,GAAaJ,mBAAS,kBAC9BK,EAAOC,GAAYN,mBAAS,QA6BnC,OACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAMO,GAAI,GAAIC,GAAI,EAAlB,SACE,eAAC,IAAD,CAAOC,UAAU,OAAjB,UACE,eAAC,IAAD,WACE,gDADF,IAC8B,sDAE9B,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,KAAD,CAAMA,UAAU,OAAhB,UACE,cAAC,IAAD,CAAYC,QAAQ,OAAOD,UAAU,0BAArC,kBAGA,eAAC,IAAD,CAAMD,GAAI,GAAV,UACE,cAAC,IAAD,CACEG,KAAK,OACLC,GAAG,WACHC,MAAOZ,EACPa,SAAWC,GAAUb,EAAQa,EAAMC,OAAOH,SAE5C,4BACE,6EAIN,eAAC,KAAD,CAAMJ,UAAU,OAAhB,UACE,cAAC,IAAD,CAAYC,QAAQ,WAAWD,UAAU,0BAAzC,uBAGA,eAAC,IAAD,CAAMD,GAAI,GAAV,UACE,cAAC,IAAD,CACEG,KAAK,OACLC,GAAG,gBACHC,MAAOV,EACPW,SAAWC,GAAUX,EAAUW,EAAMC,OAAOH,SAE9C,4BACE,6EAIN,eAAC,KAAD,CAAMJ,UAAU,OAAhB,UACE,cAAC,IAAD,CAAYC,QAAQ,QAAQD,UAAU,0BAAtC,mBAGA,eAAC,IAAD,CAAMD,GAAI,GAAV,UACE,cAAC,IAAD,CACEG,KAAK,OACLC,GAAG,aACHC,MAAOR,EACPS,SAAWC,GAAUT,EAASS,EAAMC,OAAOH,SAE7C,4BACE,6DAIN,cAAC,IAAD,CAASF,KAAK,SAASM,QAAS,KA9E1ClB,EAAgB,SAMhBmB,MAHqBC,oDAA0BlB,EAAO,WAAaE,EAAS,UAAYE,GAIrFe,MAAMC,GAAQA,EAAIC,SAClBF,MACEG,IAECxB,EAAgBwB,EAAOC,SACvBC,SAASC,eAAe,oBAAoBC,UAAY7B,EACxD2B,SAASC,eAAe,iBAAiBC,UAAYC,KAAKC,UAAUN,OAAQO,EAAW,MAExFC,IACCC,QAAQC,IAAIF,OA8DR,8BAOR,cAAC,IAAD,CAAMxB,GAAI,GAAIC,GAAI,EAAlB,SACE,eAAC,IAAD,CAAOC,UAAU,OAAjB,UACE,eAAC,IAAD,WACE,8CADF,IAC4B,qDAE5B,eAAC,IAAD,WACE,mBAAGA,UAAU,6BAAb,wEAGA,mBAAGG,GAAG,mBAAN,kBACA,qBAAKH,UAAU,gBAAgByB,IAAKpC,EAAcqC,IAAI,oCAI5D,cAAC,IAAD,CAAM5B,GAAI,GAAIC,GAAI,EAAlB,SACE,eAAC,IAAD,CAAOC,UAAU,OAAjB,UACE,eAAC,IAAD,WACE,8CADF,IAC4B,yDAE5B,cAAC,IAAD,UACE,eAAC,IAAD,WACE,mBAAGA,UAAU,6BAAb,2CACA,cAAC,IAAD,UACE,qBAAKG,GAAG","file":"static/js/51.ec2b861a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CRow,\n} from '@coreui/react'\n\nimport DragAndDrop from 'src/components/DragAndDrop'\n\nconst Piechart = () => {\n  //Set up the state variables\n\n  //Image\n  const [downloadLink, setDownloadLink] = useState('')\n\n  //Form variables\n  const [data, setData] = useState('40,60')\n  const [colors, setColors] = useState('003049,ffcdb2')\n  const [wedge, setWedge] = useState('0.05')\n\n  //api base url\n  const api_base_url = 'https://forecapp.herokuapp.com/api/justpie/'\n\n  //function to fetch data from the API\n  function fetchData() {\n    //set image to be empty\n    setDownloadLink('')\n\n    //build up API endpoint\n    var url_req_string = api_base_url + '?data=' + data + '&colors=' + colors + '&wedge=' + wedge\n\n    //fetch url and parse JSON response\n    fetch(url_req_string)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          //set the image to be the API return message\n          setDownloadLink(result.message)\n          document.getElementById('htmlDownloadLink').innerHTML = downloadLink\n          document.getElementById('json_response').innerHTML = JSON.stringify(result, undefined, 2)\n        },\n        (error) => {\n          console.log(error)\n        },\n      )\n  }\n\n  return (\n    <CRow>\n      <CCol xs={12} sm={6}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>API Inputs</strong> <small>Make some pie!</small>\n          </CCardHeader>\n          <CCardBody>\n            <CForm>\n              <CRow className=\"mb-3\">\n                <CFormLabel htmlFor=\"data\" className=\"col-sm-2 col-form-label\">\n                  Data\n                </CFormLabel>\n                <CCol sm={10}>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"inpuData\"\n                    value={data}\n                    onChange={(event) => setData(event.target.value)}\n                  />\n                  <p>\n                    <small>Enter csv of data summing to 100</small>\n                  </p>\n                </CCol>\n              </CRow>\n              <CRow className=\"mb-3\">\n                <CFormLabel htmlFor=\"colorSet\" className=\"col-sm-2 col-form-label\">\n                  Color Set\n                </CFormLabel>\n                <CCol sm={10}>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"inputColorSet\"\n                    value={colors}\n                    onChange={(event) => setColors(event.target.value)}\n                  />\n                  <p>\n                    <small>Enter csv of color hex without #</small>\n                  </p>\n                </CCol>\n              </CRow>\n              <CRow className=\"mb-3\">\n                <CFormLabel htmlFor=\"wedge\" className=\"col-sm-2 col-form-label\">\n                  Wedge\n                </CFormLabel>\n                <CCol sm={10}>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"inputWedge\"\n                    value={wedge}\n                    onChange={(event) => setWedge(event.target.value)}\n                  />\n                  <p>\n                    <small>Enter wedge size</small>\n                  </p>\n                </CCol>\n              </CRow>\n              <CButton type=\"submit\" onClick={() => fetchData()}>\n                Submit\n              </CButton>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12} sm={6}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Piechart</strong> <small>Plot from AWS</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Hereâ€™s the requested downloadlink from the AWS Bucket\n            </p>\n            <p id=\"htmlDownloadLink\">Test</p>\n            <img className=\"d-block w-100\" src={downloadLink} alt=\"download from s3 bucket\" />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12} sm={6}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Response</strong> <small>show API response</small>\n          </CCardHeader>\n          <CCardBody>\n            <CForm>\n              <p className=\"text-medium-emphasis small\">Here is the last API response</p>\n              <CCol>\n                <pre id=\"json_response\"></pre>\n              </CCol>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Piechart\n"],"sourceRoot":""}